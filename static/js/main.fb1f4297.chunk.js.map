{"version":3,"sources":["component/Navbar/index.js","component/GridBox/index.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","spacing","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","checked","navColor","setBgColor","setChecked","setNavColor","classes","className","AppBar","id","style","Toolbar","Typography","variant","noWrap","IconButton","Switch","onChange","name","inputProps","InputBase","placeholder","input","e","target","value","Alert","props","elevation","margin","minWidth","textAlign","typo","GridBox","array","bgcolor","useState","open","setOpen","handleClose","event","reason","handleClick","val","copyTxt","document","createElement","innerText","body","appendChild","select","execCommand","remove","copyColour","Card","map","text","Grid","key","item","xs","onClick","Snackbar","autoHideDuration","onClose","severity","divline","App","Box","container","data","colour","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fb1f4297.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  InputBase,\n  Switch,\n} from \"@material-ui/core\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n    margin: \"auto\",\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"15ch\",\n      \"&:focus\": {\n        width: \"25ch\",\n      },\n    },\n  },\n}));\n\nexport default function SearchAppBar({\n  checked,\n  navColor,\n  setBgColor,\n  setChecked,\n  setNavColor,\n}) {\n  // console.log('abc',state);\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"fixed\"\n        id=\"appBar\"\n        style={{ backgroundColor: navColor }}\n      >\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Colour Picker\n          </Typography>\n          <IconButton>\n            <Switch\n              checked={checked}\n              onChange={() => setChecked(!checked)}\n              name=\"checked\"\n              inputProps={{\n                \"aria-label\": \"secondary checkbox\",\n              }}\n            />\n          </IconButton>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"ex: black or #111\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange={(e) => {\n                checked ? setNavColor(e.target.value) : setBgColor(e.target.value)\n              }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport { Grid } from \"@material-ui/core\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    height: \"170px\",\n    backgroundColor: 'transparent',\n    width: \"80%\",\n    margin: \"1rem auto\",\n    \"@media(min-width: 400px)\": {\n      minWidth: \"300px\",\n      height: \"200px\",\n      width: \"auto\",\n    },\n    \"@media(min-width: 800px)\": {\n      minWidth: \"400px\",\n      height: \"200px\",\n      width: \"auto\",\n    },\n  },\n  color: {\n    width: \"33.33%\",\n    display: \"inline-block\",\n    height: \"33.33%\",\n    textAlign: \"center\",\n  },\n  typo: {\n    color: \"white\",\n  },\n});\n\nexport default function GridBox({\n  array,\n  checked,\n  bgcolor,\n  setBgColor,\n  setNavColor\n}) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  // Function To Save Colour Value To Clip-Board.\n  const copyColour = (val) => {\n    let copyTxt = document.createElement(\"textarea\");\n    copyTxt.innerText = val;\n    document.body.appendChild(copyTxt);\n    copyTxt.select();\n    document.execCommand(\"copy\");\n    copyTxt.remove();\n  };\n\n  const handleClick = (val) => {\n    checked ? setNavColor(val) : setBgColor(val)\n    setOpen(true);\n    copyColour(val);\n  };\n\n  return (\n    <Card className={classes.root}>\n      {array.map(text => (\n        <Grid\n          key={text}\n          item\n          xs\n          className={classes.color}\n          style={{ backgroundColor: text }}\n          onClick={() => handleClick(text)}\n        >\n          <Snackbar open={open} autoHideDuration={200} onClose={handleClose}>\n            <Alert severity=\"success\">{bgcolor} Copied!</Alert>\n          </Snackbar>\n        </Grid>\n      ))}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport Navbar from \"./component/Navbar\";\nimport GridBox from \"./component/GridBox\";\nimport data from \"./color.json\";\nimport \"./App.css\";\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: \"transparent\",\n  },\n  divline: {\n    height: '64px',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  const [bgcolor, setBgColor] = useState('#FFF'); \n  const [navColor, setNavColor] = useState('3F51B5');\n  const [checked, setChecked] = useState(false);\n\n  return (\n    <div style={{ backgroundColor: bgcolor }}>\n      <Navbar \n       checked={checked} \n       navColor={navColor}\n       setBgColor={val => setBgColor(val)}\n       setChecked={val => setChecked(val)}\n       setNavColor={val => setNavColor(val)}\n      />\n      <Box>\n        <div className={classes.divline} />\n        <Grid container className={classes.root}>\n          {data.colour.map(array => (\n            <GridBox\n              key={array}\n              array={array}\n              checked={checked} \n              bgcolor={bgcolor}\n              setBgColor={val => setBgColor(val)}\n              setNavColor={val => setNavColor(val)}\n            />  \n          ))}\n        </Grid>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}