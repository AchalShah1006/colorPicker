{"version":3,"sources":["component/Navbar/index.js","component/GridBox/index.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","spacing","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","classes","handleChange","val","document","getElementById","style","className","AppBar","Toolbar","Typography","variant","noWrap","IconButton","onClick","key","InputBase","placeholder","input","inputProps","onChange","target","value","Alert","props","elevation","margin","minWidth","textAlign","typo","GridBox","useState","open","setOpen","clr","setClr","handleClose","event","reason","copyTxt","createElement","innerText","body","appendChild","select","execCommand","remove","copyColour","Card","array","map","text","index","Grid","item","xs","Snackbar","autoHideDuration","onClose","severity","App","Box","container","data","colour","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2478dff8.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    margin: 'auto',\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '15ch',\r\n      '&:focus': {\r\n        width: '25ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (val) => {\r\n    if(val === ''){\r\n        document.getElementById('root').style.backgroundColor = '#FFF';    \r\n    }\r\n    document.getElementById('root').style.backgroundColor = val;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Colour Picker\r\n          </Typography>\r\n          <IconButton style={{ color: 'white' }} onClick={key => {handleChange('#FFF')}}>\r\n            <RotateLeftIcon />\r\n          </IconButton>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"ex: black or #111\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={key => {handleChange(key.target.value)}}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport { Grid, Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: '170px',\r\n    width: '80%',\r\n    margin: '1rem auto',\r\n    '@media(min-width: 400px)': {\r\n      minWidth: '300px',\r\n      height: '200px',\r\n      width: 'auto',\r\n    },\r\n    '@media(min-width: 800px)': {\r\n      minWidth: '400px',\r\n      height: '200px',\r\n      width: 'auto',\r\n    },\r\n  },\r\n  color: {\r\n    width: '33.33%',\r\n    display: 'inline-block',\r\n    height: '33.33%',\r\n    textAlign: 'center',\r\n  },\r\n  typo: {\r\n    color: 'white',\r\n  },\r\n});\r\n\r\n\r\nexport default function GridBox(props) {\r\n  const [open, setOpen] = useState(false);  // set SnackBar open/close.\r\n  const [clr, setClr] = useState();         // set colour value of OnClick event.\r\n  \r\n  const classes = useStyles();\r\n\r\n  // Function To Save Colour Value To Clip-Board.\r\n  const copyColour = (val) => {\r\n    let copyTxt = document.createElement('textarea');\r\n    copyTxt.innerText = val;\r\n    document.body.appendChild(copyTxt)\r\n    copyTxt.select();\r\n    document.execCommand('copy');\r\n    copyTxt.remove();\r\n  }\r\n  \r\n  // To Close SnackBar\r\n  const handleClose = (event, reason) => {\r\n    setOpen(false);   // set SnackBar Close\r\n  }\r\n\r\n  const handleChange = (val) => {\r\n    setClr(val);      // Set clr variable's value\r\n    setOpen(true);    // set SnackBar Open\r\n    copyColour(val);  // Call copyColour Function To save value to Clip-Board.\r\n    document.getElementById('root').style.backgroundColor = val;  // Set Document's Background Colour.\r\n  }\r\n  return (\r\n    <Card className={classes.root}> \r\n          {props.array.map((text, index)=>(\r\n            <Grid \r\n            key={text} \r\n            item xs \r\n            className={classes.color} \r\n            style={{ backgroundColor: text  }} \r\n            onClick={key => {handleChange(text)}} \r\n            >\r\n              <Snackbar open={open} autoHideDuration={1000} onClose={handleClose}>\r\n                <Alert severity=\"success\">\r\n                  Copied {clr} !\r\n                </Alert>\r\n              </Snackbar>\r\n            </Grid>\r\n          ))}\r\n          \r\n    </Card>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport Navbar from \"./component/Navbar\";\r\nimport GridBox from \"./component/GridBox\";\r\nimport data from \"./color.json\";\r\nimport \"./App.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Box>\r\n        <Grid container className={classes.root}>\r\n          {data.colour.map((text) => (\r\n            <GridBox key={text} array={text} />\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}