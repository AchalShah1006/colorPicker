{"version":3,"sources":["component/Navbar/index.js","component/GridBox/index.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","spacing","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","props","classes","handleChange","val","document","getElementById","style","state","checked","className","AppBar","id","Toolbar","Typography","variant","noWrap","IconButton","onClick","key","Switch","onChange","handle","name","inputProps","InputBase","placeholder","input","target","value","Alert","elevation","margin","minWidth","textAlign","typo","GridBox","useState","setColor","React","open","setOpen","handleClose","event","reason","copyTxt","createElement","innerText","body","appendChild","select","execCommand","remove","copyColour","Card","array","map","text","index","Grid","item","xs","Snackbar","autoHideDuration","onClose","severity","divline","App","setState","Box","container","data","colour","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0b8cb9cf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, IconButton, Typography, InputBase, Switch } from '@material-ui/core';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    margin: 'auto',\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '15ch',\r\n      '&:focus': {\r\n        width: '25ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchAppBar(props) {\r\n  // console.log('abc',state);\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (val) => {\r\n    if(val === ''){\r\n        document.getElementById('appBar').style.backgroundColor = '#3f51b5';\r\n        document.getElementById('root').style.backgroundColor = '#FFF';\r\n    }\r\n    else{ \r\n    if(props.state.checked === true){\r\n      document.getElementById('appBar').style.backgroundColor = val;\r\n    }\r\n    else{\r\n      document.getElementById('root').style.backgroundColor = val;\r\n    }\r\n  }\r\n  }\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" id=\"appBar\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Colour Picker\r\n          </Typography>\r\n         \r\n          <IconButton\r\n            style={{ color: \"white\" }}\r\n            onClick={(key) => {\r\n              handleChange('');\r\n            }}\r\n          >\r\n            <RotateLeftIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n          <Switch\r\n              checked={props.state.checked}\r\n              onChange={props.handle}\r\n              name=\"checked\"\r\n              inputProps={{\r\n                \"aria-label\": \"secondary checkbox\",\r\n              }}\r\n            />\r\n          </IconButton>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"ex: black or #111\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onChange={(key) => {\r\n                handleChange(key.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport { Grid } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: '170px',\r\n    width: '80%',\r\n    margin: '1rem auto',\r\n    '@media(min-width: 400px)': {\r\n      minWidth: '300px',\r\n      height: '200px',\r\n      width: 'auto',\r\n    },\r\n    '@media(min-width: 800px)': {\r\n      minWidth: '400px',\r\n      height: '200px',\r\n      width: 'auto',\r\n    },\r\n  },\r\n  color: {\r\n    width: '33.33%',\r\n    display: 'inline-block',\r\n    height: '33.33%',\r\n    textAlign: 'center',\r\n  },\r\n  typo: {\r\n    color: 'white',\r\n  },\r\n});\r\n\r\n\r\nexport default function GridBox(props) {\r\n\r\n  const [color, setColor] = useState();         // set colour value of OnClick event.\r\n  // console.log('xyz',props.state);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  // Function To Save Colour Value To Clip-Board.\r\n  const copyColour = (val) => {\r\n    let copyTxt = document.createElement('textarea');\r\n    copyTxt.innerText = val;\r\n    document.body.appendChild(copyTxt)\r\n    copyTxt.select();\r\n    document.execCommand('copy');\r\n    copyTxt.remove();\r\n  };\r\n\r\n  const handleChange = (val) => {\r\n    setColor(val);      // Set clr variable's value\r\n    setOpen(true);\r\n    copyColour(val);  // Call copyColour Function To save value to Clip-Board.\r\n    if(props.state.checked === true){\r\n      document.getElementById('appBar').style.backgroundColor = val;  // Set Document's Background Colour.\r\n    }\r\n    else{\r\n      document.getElementById('root').style.backgroundColor = val;  // Set Document's Background Colour.\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {props.array.map((text, index) => (\r\n        <Grid\r\n          key={text}\r\n          item\r\n          xs\r\n          className={classes.color}\r\n          style={{ backgroundColor: text }}\r\n          onClick={(key) => {\r\n            handleChange(text);\r\n          }}\r\n        >\r\n          <Snackbar open={open} autoHideDuration={200} onClose={handleClose}>\r\n        <Alert severity=\"success\">\r\n          {color} Copied!\r\n        </Alert>\r\n      </Snackbar>\r\n        </Grid>\r\n      ))}\r\n    </Card>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nimport Navbar from \"./component/Navbar\";\r\nimport GridBox from \"./component/GridBox\";\r\nimport data from \"./color.json\";\r\nimport \"./App.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  divline: {\r\n    height: '64px',\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    checked: false,\r\n  });\r\n  const handleState = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar handle={handleState} state={state} />\r\n      <Box>\r\n        <div className={classes.divline} />\r\n        <Grid container className={classes.root}>\r\n          {data.colour.map((text) => (\r\n            <GridBox key={text} array={text} state={state} />\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}